<nav
  class="sticky transition-all duration-700 top-0 z-[100000] justify-center content-center text-center w-[95%] dark:text-dark-text text-light-text mb-4 p-2 mx-auto rounded-b-lg"
>
  <div class="overflow-hidden nav rounded-lg transition-all duration-700">
    <a
      href="/"
      class="float-left hover:text-white text-center no-underline px-4 py-3.5  hover:bg-primary transition-all duration-[400ms]"
      >funCha</a
    >
    <a
      href="/about/"
      class="float-left hover:text-white text-center no-underline px-4 py-3.5  hover:bg-primary transition-all duration-[400ms]"
      >About</a
    >
    <a
      href="/music/"
      class="float-left hover:text-white text-center no-underline px-4 py-3.5  hover:bg-primary transition-all duration-[400ms]"
      >Music</a
    >
    <a
      href="/events/"
      class="float-left hover:text-white text-center no-underline px-4 py-3.5  hover:bg-primary transition-all duration-[400ms]"
      >Events</a
    >
    <a
      href="/food/"
      class="float-left hover:text-white text-center no-underline px-4 py-3.5  hover:bg-primary transition-all duration-[400ms]"
      >Food
    </a>
    <a
      href="/credits/"
      class="float-right hover:text-white text-center no-underline px-4 py-3.5 hover:bg-primary transition-all duration-[400ms]"
      >Credits</a
    >
  </div>
</nav>
<div class="spot"></div>

<script>
  // element references
  const navbar = document.querySelector("nav");
  const spot = document.querySelector(".spot");
  const dropdown = document.querySelector(".invisible");

  // handler
  const handleScroll = (entries) => {
    const spotIsVisible = entries[0].isIntersecting;
    if (spotIsVisible) {
      navbar.classList.remove("dark:shadow-2xl");
      navbar.classList.remove("dark:drop-shadow-2xl");
      navbar.classList.remove("dark:bg-dark-bg");
      navbar.children[0].classList.remove("dark:drop-shadow-none");
      navbar.children[0].classList.remove("dark:shadow-none");
      navbar.children[0].classList.remove("dark:bg-dark-secondary");
      navbar.children[0].classList.remove("dark:text-white");
      
      navbar.children[0].classList.remove("drop-shadow-2xl");
      navbar.children[0].classList.remove("shadow-2xl");
      navbar.children[0].classList.remove("text-black");
      navbar.children[0].classList.remove("bg-light-secondary");
    } else {
      navbar.classList.add("dark:shadow-2xl");
      navbar.classList.add("dark:drop-shadow-2xl");
      navbar.classList.add("dark:bg-dark-bg");
      navbar.children[0].classList.add("dark:drop-shadow-none");
      navbar.children[0].classList.add("dark:shadow-none");
      navbar.children[0].classList.add("dark:bg-dark-secondary");
      navbar.children[0].classList.add("dark:text-white");
      
      navbar.children[0].classList.add("drop-shadow-2xl");
      navbar.children[0].classList.add("shadow-2xl");
      navbar.children[0].classList.add("text-black");
      navbar.children[0].classList.add("bg-light-secondary");
    }
    console.log(dropdown)
  };

  const options = {
    root: null,
    rootMargin: "0px",
    threshhold: 0,
  };

  // initialize and start the observer.
  const observer = new IntersectionObserver(handleScroll, options);
  observer.observe(spot);
</script>
