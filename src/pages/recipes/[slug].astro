---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import readFirestore from "../../readFirestore";
import { likeArticle, addComment } from "../../writeFirestore";

export async function getStaticPaths() {
  const recipes = await getCollection("recipes");
  console.log(recipes);

  const returnable = recipes.map((recipe) => {
    return {
      params: {
        slug: recipe.slug,
      },
      props: {
        recipe,
      },
    };
  });
  return returnable;
}

interface Props {
  recipe: CollectionEntry<"recipes">;
}

let { recipe } = Astro.props;
let { Content } = await recipe.render();
let firestoreData = await readFirestore(recipe.slug);


---

<Layout title=`How to Make ${ recipe.data.title }`>
  <div class="flex flex-row gap-8">
    <div
      class="left-0 sticky top-24 w-[50vw] max-md:hidden max-h-[calc(100vh-6rem)] overflow-y-auto border-r-2 border-slate-200 pb-3"
    >
      <h3 class="text-center dark:text-dark-text text-light-text">Tags</h3>
      <div class="flex justify-center flex-row flex-wrap gap-3 my-2">
        {
          recipe.data.tags.map((tag) => (
            <span class="dark:hover:brightness-[0.75] hover:brightness-[0.8] transition-all light:drop-shadow-md light:shadow-md duration-1000 select-none dark:bg-accent bg-light-secondary dark:text-dark-text text-light-text rounded-full px-3">
              {tag}
            </span>
          ))
        }
      </div>
      <hr
        class="my-4 mx-12 h-0.5 border-t-0 bg-neutral-100 opacity-100 dark:opacity-50"
        style="background-color: rgb(245 245 245);"
      />
      <h3 class="text-center dark:text-dark-text text-light-text">Allergens</h3>
      <div class="flex justify-center flex-row flex-wrap gap-3 my-2">
        {
          recipe.data.allergens.map((allergen) => (
            <span class="dark:hover:brightness-[0.75] hover:brightness-[0.1] transition-all light:drop-shadow-md light:shadow-md duration-1000 select-none dark:bg-primary bg-primary/25 dark:text-dark-text text-light-text rounded-full px-3">
              {allergen}
            </span>
          ))
        }
      </div>
      <hr
        class="my-4 mx-12 h-0.5 border-t-0 bg-neutral-100 opacity-100 dark:opacity-50"
        style="background-color: rgb(245 245 245);"
      />
      <h3 class="text-center dark:text-dark-text text-light-text">
        Ingredients
      </h3>
      <div class="flex justify-center flex-row flex-wrap mx-14 gap-3 my-2">
        {
          recipe.data.ingredients.map((ingredient) => (
            <span class="dark:hover:brightness-[0.75] hover:brightness-[0.8] transition-all light:drop-shadow-md light:shadow-md duration-1000 select-none dark:bg-accent bg-light-secondary dark:text-dark-text text-light-text rounded-full px-3 text-center">
              {ingredient}
            </span>
          ))
        }
      </div>
      <h3 class="text-center dark:text-dark-text text-light-text mt-6">
        Related
      </h3>
      <div class="flex flex-col justify-center">
        {
          recipe.data.related.map((relation) => (
            <>
              <hr
                class="my-3 mx-12 h-0.5 border-t-0 text-center bg-neutral-100 opacity-100 dark:opacity-50"
                style="background-color: rgb(245 245 245);"
              />
              <span class="text-center dark:text-dark-text text-light-text font-normal hover:underline text-xl">
                {relation}
              </span>
            </>
          ))
        }
      </div>
    </div>
    <div class="container mx-auto px-0 md:pr-[2.5vw] lg:pr-[5vw] mt-4">
      <h1 class="text-center my-4">{recipe.data.title}</h1>
      <div

    <div
      style=`background-image: url('${ recipe.data.image_urls[0] }')`
      class="bg-cover h-[80vh] w-full rounded-lg bg-no-repeat bg-center"
    >
    </div>
    <h2 class="my-12 text-center">Introduction</h2>
    <p class="text-xl my-3 dark:text-dark-text text-light-text">
      {recipe.data.introduction}
    </p>
    <Content />
    <div class="h-0 my-12"></div>
    <div id="comments" class="hidden">
      <h1 class="text-center my-4">Comments</h1>
      <div class="grid grid-cols-12 gap-2 rounded-md border-y-2 border-white/[0.1] px-6 my-8 py-8">
        <div class="relative z-0 col-span-7">
          <input
            type="text"
            id="comment_text"
            class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-dark-text appearance-none dark:text-dark-text dark:border-dark-text/50 focus:outline-none focus:ring-0 focus:border-primary/100 peer"
            placeholder=" "
          />
          <label
            for="comment_text"
            class="absolute text-sm text-light-text dark:text-dark-text duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
            >Share your thoughts...</label
          >
        </div>
        <div class="relative z-0 col-span-3">
          <input
            type="text"
            id="name"
            class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-dark-text appearance-none dark:text-dark-text dark:border-dark-text/50 focus:outline-none focus:ring-0 focus:border-primary/100 peer"
            placeholder=" "
          />
          <label
            for="name"
            class="absolute text-sm text-light-text dark:text-dark-text duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
            >Name</label
          >
        </div>
        <button class="col-span-2 rounded-lg  p-2 outline-[2px] outline-white text-white z-10 transition-all hover:text-primary hover:bg-white hover:outline-0" id="comment-button" >
          Comment
        </button>
      </div>
      <div id="comments-container">
        {
          firestoreData['comments'].map((comment) => (
             <div class="even:bg-light-text/[0.03] dark:even:bg-dark-text/[0.03] flex flex-col group p-4 odd:border-l-2 dark:odd:border-dark-text/[0.03] odd:border-light-text/[0.03]">
              <div class="flex flex-row justify-between w-full ">
                <p class="font-bold"> { comment.author } </p>
                <p class="font-normal flex flex-row gap-2 group items-center">
                  <button>
                    <svg
                      class="w-8 aspect-square dark:stroke-dark-text stroke-light-text dark:fill-dark-text fill-light-text group-hover:scale-110 group-hover:rotate-12 transition-all"
                      version="1.1"
                      id="Capa_1"
                      xmlns="http://www.w3.org/2000/svg"
                      xmlns:xlink="http://www.w3.org/1999/xlink"
                      viewBox="0 0 471.701 471.701"
                      xml:space="preserve"
                    >
                      <g>
                        <path
                          d="M433.601,67.001c-24.7-24.7-57.4-38.2-92.3-38.2s-67.7,13.6-92.4,38.3l-12.9,12.9l-13.1-13.1
                          c-24.7-24.7-57.6-38.4-92.5-38.4c-34.8,0-67.6,13.6-92.2,38.2c-24.7,24.7-38.3,57.5-38.2,92.4c0,34.9,13.7,67.6,38.4,92.3
                          l187.8,187.8c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-3.9l188.2-187.5c24.7-24.7,38.3-57.5,38.3-92.4
                          C471.801,124.501,458.301,91.701,433.601,67.001z M414.401,232.701l-178.7,178l-178.3-178.3c-19.6-19.6-30.4-45.6-30.4-73.3
                          s10.7-53.7,30.3-73.2c19.5-19.5,45.5-30.3,73.1-30.3c27.7,0,53.8,10.8,73.4,30.4l22.6,22.6c5.3,5.3,13.8,5.3,19.1,0l22.4-22.4
                          c19.6-19.6,45.7-30.4,73.3-30.4c27.6,0,53.6,10.8,73.2,30.3c19.6,19.6,30.3,45.6,30.3,73.3
                          C444.801,187.101,434.001,213.101,414.401,232.701z"
                        ></path>
                      </g>
                    </svg>
                  </button>
                  <span class="font-bold mx-1"> { comment.likes } </span>
                </p>
              </div>
              <p class="mt-2">
                { comment.comment }
              </p>
            </div>
          ))
        }
       

      </div>
    </div>
  </div>
</Layout>
<style is:inline >
  p,
  li {
    font-size: 1.25rem !important;
    line-height: 1.75rem !important;
  }
</style>
<script is:inline type="module">
//   import { readFirestore, addComment } from "/src/firebase.js";
//   import { Astro } from "@astrojs/runtime";

// async function update() {
//   ({ recipe } = Astro.props);
//   ({ Content } = await recipe.render());
//   firestoreData = await readFirestore(recipe.slug);
// }

// async function comment() {
//   const comment = document.getElementById("comment_text").textContent;
//   const name = document.getElementById("name").textContent;
//   await addComment(recipe.slug, comment, name);
//   await update();
// }

// const commentButton = document.querySelector('#comment-button');
// commentButton.addEventListener('click', () => {
//   comment()
// })

</script>